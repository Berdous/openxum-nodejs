extends ../../../../layouts/default

block head
    title Games

block neck
    link(rel='stylesheet', href='/views/index.min.css?#{cacheBreaker}')

block body
    script(src='/javascripts/zertz/Zertz.js')

    script(language='javascript').
        $(document).ready(function() {
            Zertz.load(function() {
                $('#winnerModal .new-game-button').click(function() {
                    $('#winnerModal').modal('hide');
                    window.location.href = '/games/play/?game=zertz';
                });

                var canvas = document.getElementById("board");
                var canvas_div = document.getElementById("boardDiv");
                var engine = new Zertz.Engine(#{mode}, 0);
                var gui = new Zertz.Gui(#{color}, engine, '#{game_id}' === '-1');
                var opponent;

                if ('#{game_type}' === 'remote_ai') {
                    // opponent = new Zertz.RestWebServicePlayer(#{opponent_color}, engine, '#{user.username}');
                } else if ('#{game_type}' === 'gui') {
                    opponent = gui;
                } else if ('#{game_type}' === 'ai') {
                    // opponent = new OpenXum.MCTSPlayer(#{opponent_color}, engine);
                    opponent = new Zertz.RandomPlayer(#{opponent_color}, engine);
                } else {
                    opponent = new Zertz.RemotePlayer(#{opponent_color}, engine, '#{owner_id}', '#{opponent_id}', '#{game_id}');
                }

                var manager = new Zertz.Manager(engine, gui, opponent, new OpenXum.Status(document.getElementById("status")));

                if (canvas_div.clientHeight < canvas_div.clientWidth) {
                    canvas.height = canvas_div.clientHeight * 0.95;
                    canvas.width = canvas_div.clientHeight * 0.95;
                } else {
                    canvas.height = canvas_div.clientWidth * 0.95;
                    canvas.width = canvas_div.clientWidth * 0.95;
                }
                gui.set_canvas(canvas);
                gui.set_manager(manager);
                if ('#{game_id}' != '-1') {
                    opponent.set_manager(manager);
                    opponent.set_gui(gui);
                } else {
                    if (opponent !== gui) {
                        opponent.set_level(manager.load_level())
                    }
                    if (opponent.is_remote()) {
                        opponent.set_manager(manager);
                    }
                }
                if (opponent !== gui && engine.current_color() === opponent.color() && !opponent.is_remote()) {
                    manager.play_other();
                }
            });
        });

    br
    div.modal.fade(id='winnerModal',tabindex='-1',role='dialog',aria-labelledby='winnerModelLabel',aria-hidden='true')
        div.modal-dialog
            div.modal-content
                div.modal-body(id='winnerModalText')
                div.modal-footer
                    div.btn-group
                        a.btn.btn-primary.new-game-button(href='#') New game
    div.row
        div.col-md-6.col-md-offset-3
            a#status(class='btn btn-success btn-md active',href='#') Ready!
            a#replay(class='btn btn-warning btn-md active',href='#') Replay
    div.row
        div.col-md-12(id='boardDiv')
            canvas(id='board',style='width: 600px; height: 600px; padding-left: 0; padding-right: 0; margin-left: auto; margin-right: auto; display: block; border-radius: 15px; -moz-border-radius: 15px; box-shadow: 8px 8px 2px #aaa;')